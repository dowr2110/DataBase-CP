create or replace 
PACKAGE PACKET_USER AS
PROCEDURE ADD_ORDER(UserNamee orders.username%TYPE, Textt orders.text%TYPE, StantionNamee stations.address%TYPE, FuelNamee fuels.fuelname%TYPE, Quantityy orders.Quantity%TYPE);
PROCEDURE ADD_USER(LOGINN USERS.login%TYPE, FIOO USERS.fio%TYPE, PASSWORDD USERS.password%TYPE);
PROCEDURE DELETE_ORDER_TO_ID_U(LOGINUSER USERS.login%TYPE, PASSWORDUSER USERS.password%TYPE,ORDERIDD orders.orderid%TYPE);
PROCEDURE DELETE_USER(LOGINUSER USERS.login%TYPE, PASSWORDUSER USERS.password%TYPE);
PROCEDURE GET_FUELSOFSTATION(ADDRESSS stations.address%TYPE);
PROCEDURE GET_ORDERS_FORUSER(LOGINUSER admins.login%TYPE, PASSWORDUSER admins.password%TYPE);
PROCEDURE GET_STATISTIKA_FORUSER_D(LOGINUSER admins.login%TYPE, PASSWORDUSER admins.password%TYPE,DAYY orders.text%TYPE);
PROCEDURE GET_STATISTIKA_FORUSER_M(LOGINUSER admins.login%TYPE, PASSWORDUSER admins.password%TYPE,MONTHH orders.text%TYPE);
PROCEDURE UPDATE_PASSWORD_USER(LOGINUSER USERS.login%TYPE, PASSWORDUSER USERS.password%TYPE,PASSWORDUSERNEW USERS.password%TYPE);
PROCEDURE GET_WISHFUEL_FORUSER(FUELNAMEE fuels.fuelname%TYPE);
END PACKET_USER;



create or replace 
PACKAGE BODY PACKET_USER IS
--------------------------------------------
PROCEDURE ADD_ORDER(UserNamee orders.username%TYPE, Textt orders.text%TYPE, StantionNamee stations.address%TYPE, FuelNamee fuels.fuelname%TYPE, Quantityy orders.Quantity%TYPE)
IS
CURSOR CUR1
IS SELECT * FROM orders WHERE orderid>0;
SUB orders%ROWTYPE;
FID NUMBER;
CID NUMBER;
USID NUMBER;
STID NUMBER;
COSTT NUMBER;
SUMM NUMBER;
CURRENTCONTEINER NUMBER;
OPREDELENIYE_FUEL_V_STANCII NUMBER;
MAXID NUMBER;
BEGIN

BEGIN
SELECT USERID INTO USID FROM USERS WHERE LOGIN=UserNamee;
EXCEPTION
WHEN NO_DATA_FOUND then USID:=0;
END;
BEGIN
SELECT FUELID INTO FID FROM FUELS WHERE FUELNAME=FuelNamee;
EXCEPTION
WHEN NO_DATA_FOUND then FID:=0;
END;
BEGIN
SELECT PRICE INTO COSTT FROM FUELS WHERE FuelName=FuelNamee;
EXCEPTION
WHEN NO_DATA_FOUND then COSTT:=0;
END;
BEGIN
SELECT STATIONID INTO STID FROM STATIONS WHERE address=StantionNamee;
EXCEPTION
WHEN NO_DATA_FOUND then STID:=0;
END;
BEGIN
SELECT CONTEINERID INTO CID FROM STATIONS WHERE ADDRESS=StantionNamee;
EXCEPTION
WHEN NO_DATA_FOUND then CID:=0;
END;
BEGIN
SELECT currentquantity INTO CURRENTCONTEINER FROM CONTEINERS WHERE conteinerid=cid;
EXCEPTION
WHEN NO_DATA_FOUND then CURRENTCONTEINER:=0;
END;
BEGIN
SELECT FUELID INTO OPREDELENIYE_FUEL_V_STANCII FROM conteiners WHERE CONTEINERID=CID AND FUELID=FID;
EXCEPTION
WHEN NO_DATA_FOUND then OPREDELENIYE_FUEL_V_STANCII:=0;
END;
SELECT MAX(orderid) INTO MAXID FROM ORDERS;
OPEN CUR1;
FETCH CUR1 INTO SUB;
MAXID:=MAXID+1; 
SUMM:=COSTT*Quantityy;
IF USID=0 THEN SYS.dbms_output.put_line('POLZOVATEL NE NAYDEN!! POJALUYSTA VVEDITE KORRECTNYY LOGIN!!');
ELSIF STID=0  THEN SYS.dbms_output.put_line('VVEDITE PRAVILNYY ADDRESS STANCII!!');
ELSIF FID =0 THEN SYS.dbms_output.put_line('TOPLIVO S TAKIM IMENEM VOVSE NE SUSHESTVUYET !!!!');
ELSIF CURRENTCONTEINER <quantityy THEN SYS.dbms_output.put_line('KOLICESTVO OSTAVSHEY TOPLIVO V EMKOSTI MENSHE CEM UKAZANNOY KOLICESTVY !!!!');
SYS.dbms_output.put_line('POJALUYSTA OBRATITES K ADMINISTRATORU CHTOB POPOLNILI EMKOST !!!!');
ELSIF OPREDELENIYE_FUEL_V_STANCII=0  THEN SYS.dbms_output.put_line('TOPLIVO S TAKIM IMENEM V ETOY STANCII NE NAYDENO !!');
ELSIF CUR1%NOTFOUND AND OPREDELENIYE_FUEL_V_STANCII>0 AND STID>0 AND FID>0 AND USID>0  THEN insert into ORDERS (OrderId,UserName,Text,UserId,STATIONID,FuelId,Quantity,Cost,SUMM,orderdate)
             values  (1,UserNamee, Textt,USID,STID,FID,quantityy,COSTT,SUMM,CURRENT_DATE);
             SYS.dbms_output.put_line('NOVYY ZAKAZ DOBAVLEN!!');
             UPDATE CONTEINERS SET currentquantity=currentquantity-Quantityy WHERE conteinerid=CID;
             ELSIF CUR1%FOUND  AND  OPREDELENIYE_FUEL_V_STANCII>0 AND STID>0 AND FID>0 AND USID>0 THEN insert into ORDERS (OrderId,UserName,Text,UserId,STATIONID,FuelId,Quantity,Cost,SUMM,orderdate)
             values  (MAXID,UserNamee, Textt,USID,STID,FID,quantityy,COSTT,SUMM,CURRENT_DATE);
             SYS.dbms_output.put_line('NOVYY ZAKAZ DOBAVLEN!!');
             UPDATE CONTEINERS SET currentquantity=currentquantity-Quantityy WHERE conteinerid=CID;
END IF;
CLOSE CUR1;
END ADD_ORDER;
------------------------------------------------------------------
PROCEDURE ADD_USER(LOGINN USERS.login%TYPE, FIOO USERS.fio%TYPE, PASSWORDD USERS.password%TYPE)
IS
CURSOR CUR1
IS SELECT * FROM USERS WHERE LOGIN=LOGINN;
SUB USERS%ROWTYPE;
MAXID NUMBER;
BEGIN
SELECT MAX(userid) INTO MAXID FROM USERS;
OPEN CUR1;
FETCH CUR1 INTO SUB;
MAXID:=MAXID+1; 
IF CUR1%FOUND THEN SYS.dbms_output.put_line('POLZOVATEL S TAKIM LOGINOM UJE SUSHESTVUYET!!');
ELSIF CUR1%NOTFOUND THEN insert into USERS   (USERID,   LOGIN,FIO,PASSWORD )
             values  (MAXID,LOGINN, FIOO,PASSWORDD );
             SYS.dbms_output.put_line('NOVYY POLZOVATEL SOZDAN!!');
END IF;
CLOSE CUR1;
END ADD_USER;
-------------------------------------------------------------------------------------

PROCEDURE DELETE_ORDER_TO_ID_U(LOGINUSER USERS.login%TYPE, PASSWORDUSER USERS.password%TYPE,ORDERIDD orders.orderid%TYPE)
IS
 CURSOR CUR2
IS SELECT * FROM ORDERS WHERE ORDERID=ORDERIDD AND USERNAME=LOGINUSER;
SUB2 ORDERS%ROWTYPE;
CURSOR CUR3
IS SELECT * FROM USERS WHERE LOGIN=LOGINUSER AND password=PASSWORDUSER;
SUB3 USERS%ROWTYPE;
BEGIN 
OPEN CUR3;
FETCH CUR3 INTO SUB3;
OPEN CUR2;
FETCH CUR2 INTO SUB2;
IF CUR3%NOTFOUND THEN SYS.dbms_output.put_line('NEVERNYY LOGIN ILI POROL POLZOVATELYA!!');
ELSIF CUR2%NOTFOUND THEN  SYS.dbms_output.put_line('ZAKAZ PO UKAZANNOMU ID NE NAYDEN');
 SYS.dbms_output.put_line('VY MOJETE UDALYAT TOLKO TE ZAKAZY KOTORYE SOVERSHALI VY');
ELSIF CUR3%FOUND AND  CUR2%FOUND THEN DELETE FROM ORDERS WHERE ORDERID=ORDERIDD;
SYS.dbms_output.put_line('ZAKAZ UDALEN USPESHNO');
END IF;
CLOSE CUR2;
CLOSE CUR3;
END DELETE_ORDER_TO_ID_U;
-----------------------------------------------------------------------

PROCEDURE DELETE_USER(LOGINUSER USERS.login%TYPE, PASSWORDUSER USERS.password%TYPE)
IS
CURSOR CUR3
IS SELECT * FROM USERS WHERE LOGIN=LOGINUSER AND password=PASSWORDUSER;
SUB3 USERS%ROWTYPE;
 
BEGIN

OPEN CUR3;
FETCH CUR3 INTO SUB3;
 
IF CUR3%NOTFOUND THEN SYS.dbms_output.put_line('NEVERNYY LOGIN ILI POROL POLZOVATELYA!!'); 
ELSIF CUR3%FOUND THEN DELETE FROM ORDERS WHERE USERNAME=LOGINUSER;
DELETE FROM USERS WHERE login=LOGINUSER; 
             SYS.dbms_output.put_line('VY UDALENY!!');
END IF;
END DELETE_USER;
---------------------------------------------------

PROCEDURE GET_FUELSOFSTATION(ADDRESSS stations.address%TYPE)
IS
FUEL NUMBER;
CID NUMBER;
FUELNAME VARCHAR(10);
BEGIN
BEGIN
SELECT CONTEINERID INTO CID FROM STATIONS WHERE ADDRESS=ADDRESSS;
EXCEPTION
WHEN NO_DATA_FOUND then CID:=0;
END;
BEGIN
SELECT FUELID INTO FUEL FROM conteiners WHERE CONTEINERID=CID;
EXCEPTION
WHEN NO_DATA_FOUND then FUEL:=0;
END;
BEGIN
SELECT FUELNAME INTO FUELNAME FROM FUELS WHERE FUELID=FUEL;
EXCEPTION
WHEN NO_DATA_FOUND then FUELNAME:=NULL;
END;
IF CID=0 THEN SYS.dbms_output.put_line('NEVERNYY UKAZANNYY ADDRESS!!');
ELSIF CID>0 THEN  SYS.dbms_output.put_line('VIDY TOPLIV PO UKAZANNOMY ADRESU STANCII!!');
SYS.dbms_output.put_line(ADDRESSS||': '||FUELNAME);
END IF;
END GET_FUELSOFSTATION;
-------------------------------------------------------------

PROCEDURE GET_ORDERS_FORUSER(LOGINUSER admins.login%TYPE, PASSWORDUSER admins.password%TYPE)
IS
CURSOR CUR3
IS SELECT * FROM USERS WHERE LOGIN=LOGINUSER AND password=PASSWORDUSER;
SUB3 USERS%ROWTYPE;
CURSOR CUR4
IS SELECT * FROM ORDERS WHERE username=LOGINUSER;
BEGIN
OPEN CUR3;
FETCH CUR3 INTO SUB3;
IF CUR3%NOTFOUND THEN SYS.dbms_output.put_line('NEVERNYY LOGIN ILI POROL POLZOVATELYA!!');
ELSIF CUR3%FOUND THEN
SYS.dbms_output.put_line('INFO ABOUT USER :'||LOGINUSER);
SYS.dbms_output.put_line('|||||||||||||||||||||||||');
FOR E in CUR4
LOOP
 SYS.dbms_output.put_line('ORDEID :'||E.ORDERID);
  SYS.dbms_output.put_line('USERNAME :'||E.USERNAME);
   SYS.dbms_output.put_line('TEXT :'||E.TEXT);
    SYS.dbms_output.put_line('USERID :'||E.USERID);
     SYS.dbms_output.put_line('STATIONID :'||E.STATIONID);
     SYS.dbms_output.put_line('QUANTITY :'||E.QUANTITY);
     SYS.dbms_output.put_line('COST :'||E.COST);
     SYS.dbms_output.put_line('SUMM :'||E.SUMM);
      SYS.dbms_output.put_line('ORDERDATE :'||E.ORDERDATE);
         SYS.dbms_output.put_line('--------------------------');
 END LOOP;
END IF;

CLOSE CUR3;
END GET_ORDERS_FORUSER;
---------------------------------------------------------------------------

PROCEDURE GET_STATISTIKA_FORUSER_D(LOGINUSER admins.login%TYPE, PASSWORDUSER admins.password%TYPE,DAYY orders.text%TYPE)
IS
 SUMMM NUMBER;
  QUAN NUMBER;
CURSOR CUR3
IS SELECT * FROM USERS WHERE LOGIN=LOGINUSER AND password=PASSWORDUSER;
SUB3 USERS%ROWTYPE;
 CURSOR CUR2
IS SELECT * FROM ORDERS WHERE EXTRACT(DAY FROM orderdate)=DAYY AND USERNAME=LOGINUSER;
SUB2 ORDERS%ROWTYPE;
BEGIN
OPEN CUR3;
FETCH CUR3 INTO SUB3;
 OPEN CUR2;
FETCH CUR2 INTO SUB2;
BEGIN
SELECT SUM(SUMM) INTO SUMMM FROM ORDERS WHERE EXTRACT(DAY FROM orderdate)=DAYY AND USERNAME=LOGINUSER;
EXCEPTION
WHEN NO_DATA_FOUND then SUMMM:=0;
END;
BEGIN
SELECT SUM(quantity) INTO QUAN FROM ORDERS WHERE EXTRACT(DAY FROM orderdate)=DAYY AND USERNAME=LOGINUSER;
EXCEPTION
WHEN NO_DATA_FOUND then QUAN:=0;
END;
IF CUR3%NOTFOUND THEN SYS.dbms_output.put_line('NEVERNYY LOGIN ILI POROL POLZOVATELYA!!');
ELSIF CUR2%NOTFOUND THEN  SYS.dbms_output.put_line('UKAZANNYY DEN NE NAYDEN!!');
ELSIF CUR3%FOUND AND CUR2%FOUND THEN
SYS.dbms_output.put_line('STATISTIKA ZA UKAZANNYY DEN :'); 
SYS.dbms_output.put_line(SUMMM||'$ -POTRACENO'); 
SYS.dbms_output.put_line(QUAN||'L - KOLICESTVO POLUCENNYH LITROV'); 
END IF;
CLOSE CUR3;
CLOSE CUR2;
END GET_STATISTIKA_FORUSER_D;
----------------------------------------------------
 
PROCEDURE GET_STATISTIKA_FORUSER_M(LOGINUSER admins.login%TYPE, PASSWORDUSER admins.password%TYPE,MONTHH orders.text%TYPE)
IS
 SUMMM NUMBER;
  QUAN NUMBER;
CURSOR CUR3
IS SELECT * FROM USERS WHERE LOGIN=LOGINUSER AND password=PASSWORDUSER;
SUB3 USERS%ROWTYPE;
 CURSOR CUR2
IS SELECT * FROM ORDERS WHERE EXTRACT(MONTH FROM orderdate)=MONTHH AND USERNAME=LOGINUSER;
SUB2 ORDERS%ROWTYPE;
BEGIN
OPEN CUR3;
FETCH CUR3 INTO SUB3;
 OPEN CUR2;
FETCH CUR2 INTO SUB2;
BEGIN
SELECT SUM(SUMM) INTO SUMMM FROM ORDERS WHERE EXTRACT(MONTH FROM orderdate)=MONTHH AND USERNAME=LOGINUSER;
EXCEPTION
WHEN NO_DATA_FOUND then SUMMM:=0;
END;
BEGIN
SELECT SUM(quantity) INTO QUAN FROM ORDERS WHERE EXTRACT(MONTH FROM orderdate)=MONTHH AND USERNAME=LOGINUSER;
EXCEPTION
WHEN NO_DATA_FOUND then QUAN:=0;
END;
IF CUR3%NOTFOUND THEN SYS.dbms_output.put_line('NEVERNYY LOGIN ILI POROL POLZOVATELYA!!');
ELSIF CUR2%NOTFOUND THEN  SYS.dbms_output.put_line('UKAZANNYY MESYAC NE NAYDEN!!');
ELSIF CUR3%FOUND AND CUR2%FOUND THEN
SYS.dbms_output.put_line('STATISTIKA ZA UKAZANNYY MESYAC :'); 
SYS.dbms_output.put_line(SUMMM||'$ -POTRACENO'); 
SYS.dbms_output.put_line(QUAN||'L - KOLICESTVO POLUCENNYH LITROV'); 
END IF;
CLOSE CUR3;
CLOSE CUR2;
END GET_STATISTIKA_FORUSER_M;
---------------------------------------------------

PROCEDURE UPDATE_PASSWORD_USER(LOGINUSER USERS.login%TYPE, PASSWORDUSER USERS.password%TYPE,PASSWORDUSERNEW USERS.password%TYPE)
IS
CURSOR CUR3
IS SELECT * FROM USERS WHERE LOGIN=LOGINUSER AND password=PASSWORDUSER;
SUB3 USERS%ROWTYPE;
BEGIN
OPEN CUR3;
FETCH CUR3 INTO SUB3;
IF CUR3%NOTFOUND THEN SYS.dbms_output.put_line('NEVERNYY STARYY LOGIN ILI POROL POLZOVATELYA!!'); 
ELSIF CUR3%FOUND THEN UPDATE USERS SET password=PASSWORDUSERNEW WHERE login=LOGINUSER; 
             SYS.dbms_output.put_line('POROL IZMENEN!!');
END IF;
END UPDATE_PASSWORD_USER;
-----------------------------------------------------------

PROCEDURE GET_WISHFUEL_FORUSER(FUELNAMEE fuels.fuelname%TYPE)
IS
i number;
J number;

UU NUMBER;
UU2 NUMBER;
FID NUMBER;
----------------------
TYPE ARR_TYPE IS TABLE OF number index by pls_integer;
ARR1 ARR_TYPE;
TYPE ARR_TYPE2 IS TABLE OF NUMBER index by pls_integer;
ARR2 ARR_TYPE2;
TYPE ARR_TYPE3 IS TABLE OF varchar(20) index by pls_integer;
ARR3 ARR_TYPE3;
-----------------------------
CURSOR CUR1
IS SELECT * FROM CONTEINERS WHERE fuelid=FID;
CURSOR CUR2
IS SELECT * FROM stations;
CURSOR CUR4
IS SELECT * FROM stations;
CURSOR CUR3
IS SELECT * FROM CONTEINERS WHERE FUELID=FID;
SUB3 CONTEINERS%ROWTYPE;
---------------
BEGIN

BEGIN
SELECT FUELID INTO FID FROM FUELS WHERE FUELNAME=FUELNAMEE;
EXCEPTION
WHEN NO_DATA_FOUND then FID:=0;
END;

OPEN CUR3;
FETCH CUR3 INTO SUB3;
-------------------------------
IF CUR3%FOUND AND FID>0 THEN
i:=0;
FOR E in cur1
LOOP
 arr1(i):=e.conteinerid;
 i:=i+1;
 END LOOP;
 ------------------
  J:=0;
FOR F in cur2
LOOP
 arr2(J):=F.conteinerid;
 J:=J+1;
 END LOOP;
 UU:=0;
 UU2:=0;
 
  for W in 0..arr1.last loop
  FOR R in cur4 LOOP
        IF R.CONTEINERID=ARR1(UU) THEN
            ARR3(UU2):=R.ADDRESS;
            UU2:=UU2+1;
        END IF;
end loop;
UU:=UU+1;
 END LOOP;
 
 END IF;
   --------------------------------------  
   IF FID=0 THEN  SYS.dbms_output.put_line('UKAZANNOYE TOPLIVO NE SUSHESTVUET'); 
   ELSIF CUR3%NOTFOUND THEN  SYS.dbms_output.put_line('UKAZANNOYE TOPLIVO POKA NE ISPOLZUETSYA NE NA ODNOY ZAPRAVOCNOY STANCII'); 
   ELSIF CUR3%FOUND AND FID>0 THEN  
    SYS.dbms_output.put_line('VVEDENNOYE TOPLIVO ISPOLZUETSYA V STANCIYAH S ADRESAMI:');
 for w in 0..arr3.last loop
  SYS.dbms_output.put_line(ARR3(W));
end loop;
END IF;
END GET_WISHFUEL_FORUSER;

END;