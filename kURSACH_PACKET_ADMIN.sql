create or replace 
PACKAGE PACKET_ADMIN AS
PROCEDURE ADD_ADMIN(LOGINN admins.login%TYPE, FIOO admins.fio%TYPE, PASSWORDD admins.password%TYPE);
PROCEDURE ADD_CONTEINER(LOGINADMIN admins.login%TYPE, PASSWORDADMIN admins.password%TYPE,FuelIdd conteiners.FuelId%TYPE, MaxQuantityy conteiners.MaxQuantity%TYPE);
PROCEDURE ADD_fuel(LOGINADMIN admins.login%TYPE, PASSWORDADMIN admins.password%TYPE,fuelnamee fuels.fuelname%TYPE, Pricee fuels.price%TYPE);
PROCEDURE ADD_QUANTITY_TO_CONTEINER(LOGINADMIN admins.login%TYPE, PASSWORDADMIN admins.password%TYPE, CONTEINERIDD conteiners.conteinerid%TYPE, Quantityy orders.Quantity%TYPE);
PROCEDURE ADD_STATION(LOGINADMIN admins.login%TYPE, PASSWORDADMIN admins.password%TYPE,ConteinerIdd stations.conteinerid%TYPE, Addresss stations.address%TYPE);
PROCEDURE DELETE_ADMIN(LOGINADMIN admins.login%TYPE, PASSWORDADMIN admins.password%TYPE,ADMINNAME admins.login%TYPE);
PROCEDURE DELETE_CONTEINER(LOGINADMIN admins.login%TYPE, PASSWORDADMIN admins.password%TYPE,CONTEINERIDD CONTEINERS.CONTEINERID%TYPE);
PROCEDURE DELETE_FUEL(LOGINADMIN admins.login%TYPE, PASSWORDADMIN admins.password%TYPE,FUELIDD FUELS.FUELID%TYPE);
PROCEDURE DELETE_ORDER_TO_ID_A(LOGINADMIN admins.login%TYPE, PASSWORDADMIN admins.password%TYPE,ORDERIDD orders.orderid%TYPE);
PROCEDURE DELETE_STATION(LOGINADMIN admins.login%TYPE, PASSWORDADMIN admins.password%TYPE,STATIONIDD STATIONS.STATIONID%TYPE);
PROCEDURE EDIT_FUEL(LOGINADMIN admins.login%TYPE, PASSWORDADMIN admins.password%TYPE,FUELIDD FUELS.FUELID%TYPE,NEWNAME fuels.fuelname%TYPE);
PROCEDURE EDIT_FUEL_NAME(LOGINADMIN admins.login%TYPE, PASSWORDADMIN admins.password%TYPE,FUELIDD FUELS.FUELID%TYPE,NEWNAME fuels.fuelname%TYPE);
PROCEDURE EDIT_FUEL_PRICE(LOGINADMIN admins.login%TYPE, PASSWORDADMIN admins.password%TYPE,FUELIDD FUELS.FUELID%TYPE,NEWPRICE fuels.price%TYPE);
PROCEDURE EDIT_STATION(LOGINADMIN admins.login%TYPE, PASSWORDADMIN admins.password%TYPE,STATIONIDD FUELS.FUELID%TYPE,NEWADDRESS fuels.fuelname%TYPE);
PROCEDURE GET_ADMINS(LOGINADMIN admins.login%TYPE, PASSWORDADMIN admins.password%TYPE);
PROCEDURE GET_CONTEINERS(LOGINADMIN admins.login%TYPE, PASSWORDADMIN admins.password%TYPE);
PROCEDURE GET_FUELS(LOGINADMIN admins.login%TYPE, PASSWORDADMIN admins.password%TYPE);
PROCEDURE GET_ORDERS_FORADMIN(LOGINADMIN admins.login%TYPE, PASSWORDADMIN admins.password%TYPE,USERNAMEE USERS.LOGIN%TYPE);
PROCEDURE GET_STATIONS(LOGINADMIN admins.login%TYPE, PASSWORDADMIN admins.password%TYPE);
PROCEDURE GET_STATISTIKA_FORADMIN_D(LOGINADMIN admins.login%TYPE, PASSWORDADMIN admins.password%TYPE,DAYY orders.text%TYPE);
PROCEDURE GET_STATISTIKA_FORADMIN_M(LOGINADMIN admins.login%TYPE, PASSWORDADMIN admins.password%TYPE,MONTHH orders.text%TYPE);
PROCEDURE GET_USERS(LOGINADMIN admins.login%TYPE, PASSWORDADMIN admins.password%TYPE);
END PACKET_ADMIN;


create or replace 
PACKAGE BODY PACKET_ADMIN IS
--------------------------------------------
PROCEDURE ADD_ADMIN(LOGINN admins.login%TYPE, FIOO admins.fio%TYPE, PASSWORDD admins.password%TYPE)
IS
CURSOR CUR1
IS SELECT * FROM ADMINS WHERE LOGIN=LOGINN;
SUB ADMINS%ROWTYPE;
MAXID NUMBER;
BEGIN
SELECT MAX(ADMINID) INTO MAXID FROM ADMINS;
OPEN CUR1;
FETCH CUR1 INTO SUB;
MAXID:=MAXID+1;
IF CUR1%FOUND THEN SYS.dbms_output.put_line('ADMIN S TAKIM LOGINOM UJE SUSHESTVUYET!!');
ELSIF CUR1%NOTFOUND THEN insert into ADMINS   (ADMINID,   LOGIN,FIO,PASSWORD )
             values  (MAXID,LOGINN, FIOO,PASSWORDD );
             SYS.dbms_output.put_line('NOVYY ADMIN SOZDAN!!');
END IF;
CLOSE CUR1;
END ADD_ADMIN;

------------------------------------------
PROCEDURE ADD_CONTEINER(LOGINADMIN admins.login%TYPE, PASSWORDADMIN admins.password%TYPE,FuelIdd conteiners.FuelId%TYPE, MaxQuantityy conteiners.MaxQuantity%TYPE)
IS
CURSOR CUR1
IS SELECT * FROM conteiners WHERE ConteinerID>0;
SUB conteiners%ROWTYPE;
CURSOR CUR2
IS SELECT * FROM FUELS WHERE FuelId=FuelIdd;
SUB2 FUELS%ROWTYPE;
CURSOR CUR3
IS SELECT * FROM ADMINS WHERE LOGIN=loginadmin AND password=passwordadmin;
SUB3 ADMINS%ROWTYPE;
MAXID NUMBER;
BEGIN
SELECT MAX(ConteinerID) INTO MAXID FROM conteiners;
OPEN CUR1;
OPEN CUR2;
OPEN CUR3;
FETCH CUR1 INTO SUB;
FETCH CUR2 INTO SUB2;
FETCH CUR3 INTO SUB3;
MAXID:=MAXID+1; 
IF CUR2%NOTFOUND THEN SYS.dbms_output.put_line('TOPLIVO S TAKIM ID NE NAYDEN!!');
ELSIF CUR3%NOTFOUND THEN SYS.dbms_output.put_line('NEVERNYY LOGIN ILI POROL ADMINA!!');
ELSIF CUR1%NOTFOUND AND CUR2%FOUND THEN insert into conteiners (ConteinerId,FuelId,MaxQuantity,CurrentQuantity )
             values  (1,FuelIdd, MaxQuantityy,MaxQuantityy );
             SYS.dbms_output.put_line('NOVAYA EMKOST SOZDANA!!');
             ELSIF CUR1%FOUND  AND CUR2%FOUND THEN insert into conteiners   (ConteinerId,   FUELID,MaxQuantity,CurrentQuantity )
             values  (MAXID,FuelIdd, MaxQuantityy,MaxQuantityy );
             SYS.dbms_output.put_line('NOVAYA EMKOST SOZDANA!!');
END IF;
CLOSE CUR1;
CLOSE CUR2;
CLOSE CUR3;
END ADD_CONTEINER;
-----------------------------------------------

PROCEDURE ADD_fuel(LOGINADMIN admins.login%TYPE, PASSWORDADMIN admins.password%TYPE,fuelnamee fuels.fuelname%TYPE, Pricee fuels.price%TYPE)
IS
CURSOR CUR1
IS SELECT * FROM fuels WHERE fuelname=fuelnamee;
SUB FUELS%ROWTYPE;
CURSOR CUR2
IS SELECT * FROM fuels WHERE FUELID>0;
SUB2 FUELS%ROWTYPE;
CURSOR CUR3
IS SELECT * FROM ADMINS WHERE LOGIN=loginadmin AND password=passwordadmin;
SUB3 ADMINS%ROWTYPE;
MAXID NUMBER;
BEGIN
SELECT MAX(fuelid) INTO MAXID FROM fuels;
OPEN CUR1;
OPEN CUR2;
OPEN CUR3;
FETCH CUR1 INTO SUB;
FETCH CUR2 INTO SUB2;
FETCH CUR3 INTO SUB3;
MAXID:=MAXID+1; 
IF CUR1%FOUND THEN SYS.dbms_output.put_line('toplivo S TAKIM IMENEM UJE SUSHESTVUYET!!');
ELSIF CUR3%NOTFOUND THEN SYS.dbms_output.put_line('NEVERNYY LOGIN ILI POROL ADMINA!!');
ELSIF CUR1%NOTFOUND AND CUR2%FOUND THEN insert into FUELS   (FUELID,   FUELNAME,PRICE)
             values  (MAXID,fuelnamee, Pricee );
             SYS.dbms_output.put_line('NOVOYE TOPLIVO DOBAVLENO!!');
             ELSIF CUR1%NOTFOUND AND CUR2%NOTFOUND THEN insert into FUELS   (FUELID,   FUELNAME,PRICE)
             values  (1,fuelnamee, Pricee );
             SYS.dbms_output.put_line('NOVOYE TOPLIVO DOBAVLENO!!');
END IF;
CLOSE CUR1;
CLOSE CUR2;
CLOSE CUR3;
END ADD_fuel;
------------------------------------------------

PROCEDURE ADD_QUANTITY_TO_CONTEINER(LOGINADMIN admins.login%TYPE, PASSWORDADMIN admins.password%TYPE, CONTEINERIDD conteiners.conteinerid%TYPE, Quantityy orders.Quantity%TYPE)
IS
CURSOR CUR1
IS SELECT * FROM ADMINS WHERE LOGIN=loginadmin AND password=passwordadmin;
SUB ADMINS%ROWTYPE;
CURSOR CUR2
IS SELECT * FROM conteiners WHERE CONTEINERID=CONTEINERIDD;
SUB2 conteiners%ROWTYPE;
MAXquan NUMBER;
quan NUMBER;
BEGIN
BEGIN
SELECT maxquantity INTO MAXquan FROM conteiners WHERE CONTEINERID=CONTEINERIDD;
EXCEPTION
WHEN NO_DATA_FOUND then MAXquan:=0;
END;
 BEGIN
SELECT currentquantity INTO quan FROM conteiners WHERE CONTEINERID=CONTEINERIDD;
EXCEPTION
WHEN NO_DATA_FOUND then quan:=0;
END;
QUAN:=QUAN+Quantityy;
OPEN CUR1;
OPEN CUR2;
FETCH CUR1 INTO SUB;
FETCH CUR2 INTO SUB2;
IF CUR1%NOTFOUND THEN SYS.dbms_output.put_line('NEVERNYY LOGIN ILI POROL ADMINA!!');
ELSIF CUR2%NOTFOUND THEN SYS.dbms_output.put_line('VVEDEN NEVERNYY ID CONTEINERA!!'); 
ELSIF CUR1%FOUND AND CUR2%FOUND AND Quantityy=0  THEN  UPDATE CONTEINERS SET currentquantity=maxquantity WHERE conteinerid=CONTEINERIDD;
             SYS.dbms_output.put_line('EMKOST POPOLNENA DO MAXSIMALNOGO!!');
              ELSIF CUR1%FOUND AND CUR2%FOUND AND Quantityy>0 AND QUAN>MAXquan THEN
             SYS.dbms_output.put_line('UKAZANNOE KOLICESTVO PREVYSHYVAYET MAKSIMALNUYU EMKOST!!');
              ELSIF CUR1%FOUND AND CUR2%FOUND AND Quantityy>0  THEN  UPDATE CONTEINERS SET currentquantity=currentquantity+Quantityy WHERE conteinerid=CONTEINERIDD;
             SYS.dbms_output.put_line('EMKOST POPOLNENA DO UKAZONNOGO KOLICESTVO RAZ!!');
END IF;
CLOSE CUR1;
CLOSE CUR2;
END ADD_QUANTITY_TO_CONTEINER;
-------------------------------------------------------

PROCEDURE ADD_STATION(LOGINADMIN admins.login%TYPE, PASSWORDADMIN admins.password%TYPE,ConteinerIdd stations.conteinerid%TYPE, Addresss stations.address%TYPE)
IS
CURSOR CUR1
IS SELECT * FROM stations WHERE STATIONID>0;
SUB stations%ROWTYPE;
CURSOR CUR2
IS SELECT * FROM CONTEINERS WHERE conteinerid=ConteinerIdd;
SUB2 CONTEINERS%ROWTYPE;
CURSOR CUR3
IS SELECT * FROM STATIONS WHERE ADDRESS=Addresss;
SUB3 STATIONS%ROWTYPE;
CURSOR CUR4
IS SELECT * FROM ADMINS WHERE LOGIN=loginadmin AND password=passwordadmin;
SUB4 ADMINS%ROWTYPE;
MAXID NUMBER;
BEGIN
SELECT MAX(stationid) INTO MAXID FROM stations;
OPEN CUR1;
OPEN CUR2;
OPEN CUR3;
OPEN CUR4;
FETCH CUR1 INTO SUB;
FETCH CUR2 INTO SUB2;
FETCH CUR3 INTO SUB3;
FETCH CUR4 INTO SUB4;
MAXID:=MAXID+1; 
IF CUR2%NOTFOUND THEN SYS.dbms_output.put_line('EMKOST S TAKIM ID NE NAYDENA!!');
ELSIF CUR4%NOTFOUND THEN SYS.dbms_output.put_line('NEVERNYY LOGIN ILI POROL ADMINA!!');
ELSIF CUR3%FOUND  THEN SYS.dbms_output.put_line('STANCIYA V ETOM ADDRESE UJE SUSHESTVUYET!!');
ELSIF CUR1%NOTFOUND AND CUR2%FOUND AND CUR3%NOTFOUND THEN insert into stations (stationid,conteinerid,address)
             values  (1,ConteinerIdd, Addresss);
             SYS.dbms_output.put_line('NOVAYA STANCIYA SOZDANA!!');
             ELSIF CUR1%FOUND  AND CUR2%FOUND  AND CUR3%NOTFOUND THEN insert into stations (stationid,conteinerid,address)
             values  (MAXID,ConteinerIdd, Addresss);
             SYS.dbms_output.put_line('NOVAYA STANCIYA SOZDANA!!');
END IF;
CLOSE CUR1;
CLOSE CUR2;
CLOSE CUR3;
CLOSE CUR4;
END ADD_STATION;
----------------------------------------------------------

PROCEDURE DELETE_ADMIN(LOGINADMIN admins.login%TYPE, PASSWORDADMIN admins.password%TYPE,ADMINNAME admins.login%TYPE)
IS
CURSOR CUR1
IS SELECT * FROM ADMINS WHERE LOGIN=ADMINNAME AND LOGIN!=LOGINADMIN;
SUB ADMINS%ROWTYPE;
CURSOR CUR3
IS SELECT * FROM ADMINS WHERE LOGIN=loginadmin AND password=passwordadmin;
SUB3 ADMINS%ROWTYPE;
 
BEGIN
OPEN CUR1;
FETCH CUR1 INTO SUB;
OPEN CUR3;
FETCH CUR3 INTO SUB3;
 
IF CUR1%NOTFOUND THEN SYS.dbms_output.put_line('ADMIN S TAKIM LOGINOM NE NAYDEN!!');
SYS.dbms_output.put_line('ILI VY NE MOJETE UDALIT SAMOGO SEBYA!!');
ELSIF CUR3%NOTFOUND THEN SYS.dbms_output.put_line('NEVERNYY LOGIN ILI POROL ADMINA!!'); 
ELSIF CUR3%FOUND AND CUR1%FOUND THEN DELETE FROM ADMINS WHERE login=adminname; 
             SYS.dbms_output.put_line('ADMIN UDALEN!!');
END IF;
CLOSE CUR1;
END DELETE_ADMIN;
--------------------------------------------------------------
---------------------------------------------------

PROCEDURE DELETE_CONTEINER(LOGINADMIN admins.login%TYPE, PASSWORDADMIN admins.password%TYPE,CONTEINERIDD CONTEINERS.CONTEINERID%TYPE)
IS
CURSOR CUR1
IS SELECT * FROM STATIONS WHERE CONTEINERID=CONTEINERIDD;
SUB STATIONS%ROWTYPE;
CURSOR CUR2
IS SELECT * FROM CONTEINERS WHERE CONTEINERID=CONTEINERIDD;
SUB2 CONTEINERS%ROWTYPE;
CURSOR CUR3
IS SELECT * FROM ADMINS WHERE LOGIN=loginadmin AND password=passwordadmin;
SUB3 ADMINS%ROWTYPE;
BEGIN
OPEN CUR1;
FETCH CUR1 INTO SUB;
OPEN CUR2;
FETCH CUR2 INTO SUB2;
OPEN CUR3;
FETCH CUR3 INTO SUB3;
IF CUR3%NOTFOUND THEN SYS.dbms_output.put_line('NEVERNYY LOGIN ILI POROL ADMINA!!'); 
ELSIF CUR1%FOUND THEN SYS.dbms_output.put_line('VY NE MOJETE UDALIT ETU EMKOST POKA EE ISPOLZUET STANCIA!!');
 SYS.dbms_output.put_line('IZMENITE ILI UDALITE STANTIYU ISPOLZUESHEYE DANNOYE TOPLIVO');
ELSIF CUR2%NOTFOUND THEN SYS.dbms_output.put_line('UKAZANNAYA EMKOST NE NAYDENA!!');
ELSIF CUR3%FOUND AND CUR1%NOTFOUND AND CUR2%FOUND THEN DELETE FROM CONTEINERS WHERE CONTEINERID=CONTEINERIDD; 
             SYS.dbms_output.put_line('EMKOST UDALENA USPESHNO!!');
END IF;
CLOSE CUR1;
CLOSE CUR2;
CLOSE CUR3;
END DELETE_CONTEINER;
------------------------------------------------------

PROCEDURE DELETE_FUEL(LOGINADMIN admins.login%TYPE, PASSWORDADMIN admins.password%TYPE,FUELIDD FUELS.FUELID%TYPE)
IS
CURSOR CUR1
IS SELECT * FROM FUELS WHERE FUELID=FUELIDD;
SUB FUELS%ROWTYPE;
CURSOR CUR2
IS SELECT * FROM CONTEINERS WHERE FUELID=FUELIDD;
SUB2 CONTEINERS%ROWTYPE;
CURSOR CUR3
IS SELECT * FROM ADMINS WHERE LOGIN=loginadmin AND password=passwordadmin;
SUB3 ADMINS%ROWTYPE;
BEGIN
OPEN CUR1;
FETCH CUR1 INTO SUB;
OPEN CUR2;
FETCH CUR2 INTO SUB2;
OPEN CUR3;
FETCH CUR3 INTO SUB3;
IF CUR3%NOTFOUND THEN SYS.dbms_output.put_line('NEVERNYY LOGIN ILI POROL ADMINA!!'); 
ELSIF CUR1%NOTFOUND THEN SYS.dbms_output.put_line('UKAZANNOYE TOPLIVO NE NAYDENA!!');
ELSIF CUR2%FOUND THEN SYS.dbms_output.put_line('VY NE MOJETE UDALIT ETO TOPLIVO POKA EE ISPOLZUET EMKOST!!');
 SYS.dbms_output.put_line('IZMENITE ILI UDALITE EMKOST ISPOLZUESHEYE DANNOYE TOPLIVO');
ELSIF CUR3%FOUND AND CUR1%FOUND AND CUR2%NOTFOUND THEN UPDATE ORDERS SET fuelid=null WHERE FUELID=FUELIDD;
DELETE FROM FUELS WHERE FUELID=FUELIDD; 
             SYS.dbms_output.put_line('TOPLIVO UDALENO USPESHNO!!');
END IF;
CLOSE CUR1;
CLOSE CUR2;
CLOSE CUR3;
END DELETE_FUEL;
-------------------------------------------
PROCEDURE DELETE_ORDER_TO_ID_A(LOGINADMIN admins.login%TYPE, PASSWORDADMIN admins.password%TYPE,ORDERIDD orders.orderid%TYPE)
IS
 CURSOR CUR2
IS SELECT * FROM ORDERS WHERE ORDERID=ORDERIDD;
SUB2 ORDERS%ROWTYPE;
CURSOR CUR3
IS SELECT * FROM ADMINS WHERE LOGIN=loginadmin AND password=passwordadmin;
SUB3 ADMINS%ROWTYPE;
BEGIN 
OPEN CUR3;
FETCH CUR3 INTO SUB3;
OPEN CUR2;
FETCH CUR2 INTO SUB2;
IF CUR3%NOTFOUND THEN SYS.dbms_output.put_line('NEVERNYY LOGIN ILI POROL ADMINA!!');
ELSIF CUR2%NOTFOUND THEN  SYS.dbms_output.put_line('ZAKAZ PO UKAZANNOMU ID NE NAYDEN');
ELSIF CUR3%FOUND AND  CUR2%FOUND THEN DELETE FROM ORDERS WHERE ORDERID=ORDERIDD;
SYS.dbms_output.put_line('ZAKAZ UDALEN USPESHNO');
END IF;
CLOSE CUR2;
CLOSE CUR3;
END DELETE_ORDER_TO_ID_A;

----------------------------------------------------
PROCEDURE DELETE_STATION(LOGINADMIN admins.login%TYPE, PASSWORDADMIN admins.password%TYPE,STATIONIDD STATIONS.STATIONID%TYPE)
IS
CURSOR CUR1
IS SELECT * FROM STATIONS WHERE STATIONID=STATIONIDD;
SUB STATIONS%ROWTYPE;
CURSOR CUR3
IS SELECT * FROM ADMINS WHERE LOGIN=loginadmin AND password=passwordadmin;
SUB3 ADMINS%ROWTYPE;
BEGIN
OPEN CUR1;
FETCH CUR1 INTO SUB;
OPEN CUR3;
FETCH CUR3 INTO SUB3;
IF CUR3%NOTFOUND THEN SYS.dbms_output.put_line('NEVERNYY LOGIN ILI POROL ADMINA!!'); 
ELSIF CUR1%NOTFOUND THEN SYS.dbms_output.put_line('UKAZANNAYA STANCIA NE NAYDENA!!');
ELSIF CUR3%FOUND AND CUR1%FOUND THEN UPDATE ORDERS SET stationid=NULL WHERE stationid=STATIONIDD;
DELETE FROM STATIONS WHERE STATIONID=STATIONIDD; 
             SYS.dbms_output.put_line('TOPLIVO UDALENO USPESHNO!!');
END IF;
CLOSE CUR1;
CLOSE CUR3;
END DELETE_STATION;
---------------------------------------------------------

PROCEDURE EDIT_FUEL(LOGINADMIN admins.login%TYPE, PASSWORDADMIN admins.password%TYPE,FUELIDD FUELS.FUELID%TYPE,NEWNAME fuels.fuelname%TYPE)
IS
CURSOR CUR1
IS SELECT * FROM FUELS WHERE FUELID=FUELIDD;
SUB FUELS%ROWTYPE;
CURSOR CUR3
IS SELECT * FROM ADMINS WHERE LOGIN=loginadmin AND password=passwordadmin;
SUB3 ADMINS%ROWTYPE;
BEGIN
OPEN CUR1;
FETCH CUR1 INTO SUB;

OPEN CUR3;
FETCH CUR3 INTO SUB3;
IF CUR3%NOTFOUND THEN SYS.dbms_output.put_line('NEVERNYY LOGIN ILI POROL ADMINA!!'); 
ELSIF CUR1%NOTFOUND THEN SYS.dbms_output.put_line('UKAZANNOYE TOPLIVO NE NAYDENA!!');  
ELSIF CUR3%FOUND AND CUR1%FOUND THEN UPDATE FUELS SET fuelname=NEWNAME WHERE FUELID=FUELIDD; 
             SYS.dbms_output.put_line('NAZVANIYE TOPLIVO IZMENENO USPESHNO!!');
END IF;
CLOSE CUR3;
END EDIT_FUEL;
--------------------------------------------------

PROCEDURE EDIT_FUEL_NAME(LOGINADMIN admins.login%TYPE, PASSWORDADMIN admins.password%TYPE,FUELIDD FUELS.FUELID%TYPE,NEWNAME fuels.fuelname%TYPE)
IS
CURSOR CUR1
IS SELECT * FROM FUELS WHERE FUELID=FUELIDD;
SUB FUELS%ROWTYPE;
CURSOR CUR3
IS SELECT * FROM ADMINS WHERE LOGIN=loginadmin AND password=passwordadmin;
SUB3 ADMINS%ROWTYPE;
BEGIN
OPEN CUR1;
FETCH CUR1 INTO SUB;

OPEN CUR3;
FETCH CUR3 INTO SUB3;
IF CUR3%NOTFOUND THEN SYS.dbms_output.put_line('NEVERNYY LOGIN ILI POROL ADMINA!!'); 
ELSIF CUR1%NOTFOUND THEN SYS.dbms_output.put_line('UKAZANNOYE TOPLIVO NE NAYDENA!!');  
ELSIF CUR3%FOUND AND CUR1%FOUND THEN UPDATE FUELS SET fuelname=NEWNAME WHERE FUELID=FUELIDD; 
             SYS.dbms_output.put_line('NAZVANIYE TOPLIVO IZMENENO USPESHNO!!');
END IF;
CLOSE CUR3;
END EDIT_FUEL_NAME;
----------------------------------------------------------------
PROCEDURE EDIT_FUEL_PRICE(LOGINADMIN admins.login%TYPE, PASSWORDADMIN admins.password%TYPE,FUELIDD FUELS.FUELID%TYPE,NEWPRICE fuels.price%TYPE)
IS
CURSOR CUR1
IS SELECT * FROM FUELS WHERE FUELID=FUELIDD;
SUB FUELS%ROWTYPE;
CURSOR CUR3
IS SELECT * FROM ADMINS WHERE LOGIN=loginadmin AND password=passwordadmin;
SUB3 ADMINS%ROWTYPE;
BEGIN
OPEN CUR1;
FETCH CUR1 INTO SUB;

OPEN CUR3;
FETCH CUR3 INTO SUB3;
IF CUR3%NOTFOUND THEN SYS.dbms_output.put_line('NEVERNYY LOGIN ILI POROL ADMINA!!'); 
ELSIF CUR1%NOTFOUND THEN SYS.dbms_output.put_line('UKAZANNOYE TOPLIVO NE NAYDENA!!');  
ELSIF CUR3%FOUND AND CUR1%FOUND THEN UPDATE FUELS SET PRICE=NEWPRICE WHERE FUELID=FUELIDD; 
             SYS.dbms_output.put_line('CENA TOPLIVO IZMENENO USPESHNO!!');
END IF;
CLOSE CUR3;
END EDIT_FUEL_PRICE;
---------------------------------------
PROCEDURE EDIT_STATION(LOGINADMIN admins.login%TYPE, PASSWORDADMIN admins.password%TYPE,STATIONIDD FUELS.FUELID%TYPE,NEWADDRESS fuels.fuelname%TYPE)
IS
CURSOR CUR1
IS SELECT * FROM STATIONS WHERE STATIONID=STATIONIDD;
SUB STATIONS%ROWTYPE;
CURSOR CUR3
IS SELECT * FROM ADMINS WHERE LOGIN=loginadmin AND password=passwordadmin;
SUB3 ADMINS%ROWTYPE;
BEGIN
OPEN CUR1;
FETCH CUR1 INTO SUB;

OPEN CUR3;
FETCH CUR3 INTO SUB3;
IF CUR3%NOTFOUND THEN SYS.dbms_output.put_line('NEVERNYY LOGIN ILI POROL ADMINA!!'); 
ELSIF CUR1%NOTFOUND THEN SYS.dbms_output.put_line('UKAZANNYY ADDRESS NE NAYDEN!!');  
ELSIF CUR3%FOUND AND CUR1%FOUND THEN UPDATE STATIONS SET address=NEWADDRESS WHERE STATIONID=STATIONIDD;
             SYS.dbms_output.put_line('ADDRESS STANCII IZMENENO USPESHNO!!');
END IF;
CLOSE CUR3;
END EDIT_STATION;

-------------------------------------------------------


PROCEDURE GET_ADMINS(LOGINADMIN admins.login%TYPE, PASSWORDADMIN admins.password%TYPE)
IS

CURSOR CUR3
IS SELECT * FROM ADMINS WHERE LOGIN=loginadmin AND password=passwordadmin;
SUB3 ADMINS%ROWTYPE;
CURSOR CUR4
IS SELECT * FROM ADMINS;
BEGIN
OPEN CUR3;
FETCH CUR3 INTO SUB3;

IF CUR3%NOTFOUND THEN SYS.dbms_output.put_line('NEVERNYY LOGIN ILI POROL ADMINA!!');
ELSIF CUR3%FOUND THEN
SYS.dbms_output.put_line('ALL ADMINS :');
SYS.dbms_output.put_line('|||||||||||||||||||||||||');
FOR E in CUR4
LOOP
 SYS.dbms_output.put_line('LOGIN :'||E.LOGIN);
  SYS.dbms_output.put_line('FIO :'||E.FIO);
   SYS.dbms_output.put_line('PASSWORD :'||E.PASSWORD);
            SYS.dbms_output.put_line('--------------------------');
 END LOOP;
END IF;
CLOSE CUR3;
END GET_ADMINS;
------------------------------------------------
PROCEDURE GET_CONTEINERS(LOGINADMIN admins.login%TYPE, PASSWORDADMIN admins.password%TYPE)
IS
CURSOR CUR3
IS SELECT * FROM ADMINS WHERE LOGIN=loginadmin AND password=passwordadmin;
SUB3 ADMINS%ROWTYPE;
CURSOR CUR4
IS SELECT * FROM CONTEINERS;
BEGIN
OPEN CUR3;
FETCH CUR3 INTO SUB3;

IF CUR3%NOTFOUND THEN SYS.dbms_output.put_line('NEVERNYY LOGIN ILI POROL ADMINA!!');
ELSIF CUR3%FOUND THEN
SYS.dbms_output.put_line('ALL CONTEINERS :');
SYS.dbms_output.put_line('|||||||||||||||||||||||||');
FOR E in CUR4
LOOP
 SYS.dbms_output.put_line('CONTEINER :'||E.CONTEINERID);
  SYS.dbms_output.put_line('FUELID :'||E.FUELID); 
   SYS.dbms_output.put_line('MAXQUANTITY :'||E.MAXQUANTITY); 
     SYS.dbms_output.put_line('CURRENTQUANTITY :'||E.CURRENTQUANTITY); 
            SYS.dbms_output.put_line('--------------------------');
 END LOOP;
END IF;
CLOSE CUR3;
END GET_CONTEINERS;
---------------------------------------------------------
PROCEDURE GET_FUELS(LOGINADMIN admins.login%TYPE, PASSWORDADMIN admins.password%TYPE)
IS
CURSOR CUR3
IS SELECT * FROM ADMINS WHERE LOGIN=loginadmin AND password=passwordadmin;
SUB3 ADMINS%ROWTYPE;
CURSOR CUR4
IS SELECT * FROM FUELS;
BEGIN
OPEN CUR3;
FETCH CUR3 INTO SUB3;

IF CUR3%NOTFOUND THEN SYS.dbms_output.put_line('NEVERNYY LOGIN ILI POROL ADMINA!!');
ELSIF CUR3%FOUND THEN
SYS.dbms_output.put_line('ALL FUELS :');
SYS.dbms_output.put_line('|||||||||||||||||||||||||');
FOR E in CUR4
LOOP
 SYS.dbms_output.put_line('FUELNAME :'||E.FUELNAME);
  SYS.dbms_output.put_line('PRICE :'||E.PRICE); 
            SYS.dbms_output.put_line('--------------------------');
 END LOOP;
END IF;
CLOSE CUR3;
END GET_FUELS;
------------------------------------------------
PROCEDURE GET_ORDERS_FORADMIN(LOGINADMIN admins.login%TYPE, PASSWORDADMIN admins.password%TYPE,USERNAMEE USERS.LOGIN%TYPE)
IS
CURSOR CUR2
IS SELECT * FROM ORDERS WHERE username=USERNAMEE;
SUB2 ORDERS%ROWTYPE;
CURSOR CUR3
IS SELECT * FROM ADMINS WHERE LOGIN=loginadmin AND password=passwordadmin;
SUB3 ADMINS%ROWTYPE;
CURSOR CUR4
IS SELECT * FROM ORDERS WHERE username=USERNAMEE;
BEGIN
OPEN CUR3;
FETCH CUR3 INTO SUB3;
OPEN CUR2;
FETCH CUR2 INTO SUB2;
IF CUR3%NOTFOUND THEN SYS.dbms_output.put_line('NEVERNYY LOGIN ILI POROL ADMINA!!');
ELSIF CUR2%NOTFOUND THEN  SYS.dbms_output.put_line('UKAZANNYY POLZOVATEL NE NAYDEN!!');
ELSIF CUR2%FOUND THEN
SYS.dbms_output.put_line('INFO ABOUT USER :'||USERNAMEE);
SYS.dbms_output.put_line('|||||||||||||||||||||||||');
FOR E in CUR4
LOOP
 SYS.dbms_output.put_line('ORDEID :'||E.ORDERID);
  SYS.dbms_output.put_line('USERNAME :'||E.USERNAME);
   SYS.dbms_output.put_line('TEXT :'||E.TEXT);
    SYS.dbms_output.put_line('USERID :'||E.USERID);
     SYS.dbms_output.put_line('STATIONID :'||E.STATIONID);
     SYS.dbms_output.put_line('QUANTITY :'||E.QUANTITY);
     SYS.dbms_output.put_line('COST :'||E.COST);
     SYS.dbms_output.put_line('SUMM :'||E.SUMM);
      SYS.dbms_output.put_line('ORDERDATE :'||E.ORDERDATE);
         SYS.dbms_output.put_line('--------------------------');
 END LOOP;

END IF;
CLOSE CUR2;
CLOSE CUR3;
END GET_ORDERS_FORADMIN;
------------------------------------------------------------

PROCEDURE GET_STATIONS(LOGINADMIN admins.login%TYPE, PASSWORDADMIN admins.password%TYPE)
IS
CURSOR CUR3
IS SELECT * FROM ADMINS WHERE LOGIN=loginadmin AND password=passwordadmin;
SUB3 ADMINS%ROWTYPE;
CURSOR CUR4
IS SELECT * FROM STATIONS;
BEGIN
OPEN CUR3;
FETCH CUR3 INTO SUB3;

IF CUR3%NOTFOUND THEN SYS.dbms_output.put_line('NEVERNYY LOGIN ILI POROL ADMINA!!');
ELSIF CUR3%FOUND THEN
SYS.dbms_output.put_line('ALL STATIONS :');
SYS.dbms_output.put_line('|||||||||||||||||||||||||');
FOR E in CUR4
LOOP
 SYS.dbms_output.put_line('ADDRESS :'||E.ADDRESS);
  SYS.dbms_output.put_line('CONTEINER :'||E.CONTEINERID); 
            SYS.dbms_output.put_line('--------------------------');
 END LOOP;
END IF;
CLOSE CUR3;
END GET_STATIONS;
----------------------------------------------------------
PROCEDURE GET_STATISTIKA_FORADMIN_D(LOGINADMIN admins.login%TYPE, PASSWORDADMIN admins.password%TYPE,DAYY orders.text%TYPE)
IS
 SUMMM NUMBER;
  QUAN NUMBER;
CURSOR CUR3
IS SELECT * FROM ADMINS WHERE LOGIN=loginadmin AND password=passwordadmin;
SUB3 ADMINS%ROWTYPE;
 CURSOR CUR2
IS SELECT * FROM ORDERS WHERE EXTRACT(DAY FROM orderdate)=DAYY;
SUB2 ORDERS%ROWTYPE;
BEGIN
OPEN CUR3;
FETCH CUR3 INTO SUB3;
 OPEN CUR2;
FETCH CUR2 INTO SUB2;
BEGIN
SELECT SUM(SUMM) INTO SUMMM FROM ORDERS WHERE EXTRACT(DAY FROM orderdate)=DAYY;
EXCEPTION
WHEN NO_DATA_FOUND then SUMMM:=0;
END;
BEGIN
SELECT SUM(quantity) INTO QUAN FROM ORDERS WHERE EXTRACT(DAY FROM orderdate)=DAYY;
EXCEPTION
WHEN NO_DATA_FOUND then QUAN:=0;
END;
IF CUR3%NOTFOUND THEN SYS.dbms_output.put_line('NEVERNYY LOGIN ILI POROL ADMINA!!');
ELSIF CUR2%NOTFOUND THEN  SYS.dbms_output.put_line('UKAZANNYY DEN NE NAYDEN!!');
ELSIF CUR3%FOUND AND CUR2%FOUND THEN
SYS.dbms_output.put_line('STATISTIKA ZA UKAZANNYY DEN :'); 
SYS.dbms_output.put_line(SUMMM||'$ -DOHOD'); 
SYS.dbms_output.put_line(QUAN||'L - KOLICESTVO UTRACENNYH LITROV'); 
END IF;
CLOSE CUR3;
CLOSE CUR2;
END GET_STATISTIKA_FORADMIN_D;
------------------------------------------------------
PROCEDURE GET_STATISTIKA_FORADMIN_M(LOGINADMIN admins.login%TYPE, PASSWORDADMIN admins.password%TYPE,MONTHH orders.text%TYPE)
IS
 SUMMM NUMBER;
  QUAN NUMBER;
CURSOR CUR3
IS SELECT * FROM ADMINS WHERE LOGIN=loginadmin AND password=passwordadmin;
SUB3 ADMINS%ROWTYPE;
 CURSOR CUR2
IS SELECT * FROM ORDERS WHERE EXTRACT(month FROM orderdate)=monthh;
SUB2 ORDERS%ROWTYPE;
BEGIN
OPEN CUR3;
FETCH CUR3 INTO SUB3;
 OPEN CUR2;
FETCH CUR2 INTO SUB2;
BEGIN
SELECT SUM(SUMM) INTO SUMMM FROM ORDERS WHERE EXTRACT(month FROM orderdate)=monthh;
EXCEPTION
WHEN NO_DATA_FOUND then SUMMM:=0;
END;
BEGIN
SELECT SUM(quantity) INTO QUAN FROM ORDERS WHERE EXTRACT(month FROM orderdate)=monthh;
EXCEPTION
WHEN NO_DATA_FOUND then QUAN:=0;
END;
IF CUR3%NOTFOUND THEN SYS.dbms_output.put_line('NEVERNYY LOGIN ILI POROL ADMINA!!');
ELSIF CUR2%NOTFOUND THEN  SYS.dbms_output.put_line('UKAZANNYY MESYAC NE NAYDEN!!');
ELSIF CUR3%FOUND AND CUR2%FOUND THEN
SYS.dbms_output.put_line('STATISTIKA ZA UKAZANNYY MESYAC :'); 
SYS.dbms_output.put_line(SUMMM||'$ -DOHOD'); 
SYS.dbms_output.put_line(QUAN||'L - KOLICESTVO UTRACENNYH LITROV'); 
END IF;
CLOSE CUR3;
CLOSE CUR2;
END GET_STATISTIKA_FORADMIN_M;
-----------------------------------------------------------
PROCEDURE GET_USERS(LOGINADMIN admins.login%TYPE, PASSWORDADMIN admins.password%TYPE)
IS

CURSOR CUR3
IS SELECT * FROM ADMINS WHERE LOGIN=loginadmin AND password=passwordadmin;
SUB3 ADMINS%ROWTYPE;
CURSOR CUR4
IS SELECT * FROM USERS;
BEGIN
OPEN CUR3;
FETCH CUR3 INTO SUB3;

IF CUR3%NOTFOUND THEN SYS.dbms_output.put_line('NEVERNYY LOGIN ILI POROL ADMINA!!');
ELSIF CUR3%FOUND THEN
SYS.dbms_output.put_line('ALL USERS :');
SYS.dbms_output.put_line('|||||||||||||||||||||||||');
FOR E in CUR4
LOOP
 SYS.dbms_output.put_line('LOGIN :'||E.LOGIN);
  SYS.dbms_output.put_line('FIO :'||E.FIO);
   SYS.dbms_output.put_line('PASSWORD :'||E.PASSWORD);
            SYS.dbms_output.put_line('--------------------------');
 END LOOP;
END IF;
CLOSE CUR3;
END GET_USERS;

END;